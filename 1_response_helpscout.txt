I have a bunch of Help Docs for my Web Application.

I want to build a backend server that can query for the best documents
related to the search, then feed those to a LLM to provide an AI chat bot
for customer support.

I have access to an external API to query for several related help docs.
Then I can query for each individual Help Doc I think is best. But then
I would have to make two API calls each time, then feed it to an LLM
which also takes time.

I want to speed up the process. So I'm considering storing all our help
docs in a database to eventually make our own help docs page. And quickly
be able to query for docs and feed it to our LLM. 

What are some solutions for this problem?

My preferred Tech Stack would be any combination of the following:
Typescript, React, Next.JS, Rust, Ruby on Rails, GraphQL, Rest API.

Let's go with Hybrid approach for Database. 
I want to utilize Vector Databases and Postgres.


I need to create a script that will go through an an external API 
and get all the collections and get each collection id.  
Then query each collection to get all the articles in that collection 
and get each article ID.  Then I need to query for each article by it's ID. 

I want to store each collection and each article in my database as we get them. 

Here is what the responses look like for each:

Collection:

{
    "id": "5214c83d45667acd25394b53",
    "siteId": "52404efc4566740003092640",
    "number": 33,
    "slug": "my-collection",
    "visibility": "public",
    "order": 1,
    "name": "My Collection",
    "description": "Description of my collection",
    "publicUrl": "https://my-docs.helpscoutdocs.com/collection/1-test",
    "articleCount": 3,
    "publishedArticleCount": 1,
    "createdBy": 73423,
    "updatedBy": 73423,
    "createdAt": "2013-08-21T14:01:33Z",
    "updatedAt": "2013-08-21T14:01:33Z"
}

Article

{
    "id": "521632244566c845e582652d",
    "number": 125,
    "collectionId": "5214c77c45667acd25394b51",
    "slug": "my-article",
    "status": "published",
    "hasDraft": false,
    "name": "My Article",
    "text": "This is the text of the article.",
    "categories": [
        "5214c77d45667acd25394b52"
    ],
    "related": [
        "521632244566c845e582652b",
        "521632244566c845e582652c"
    ],
    "publicUrl": "https://docs.helpscout.net/article/100-my-article",
    "popularity": 4.3,
    "viewCount": 237,
    "createdBy": 73423,
    "updatedBy": 73423,
    "createdAt": "2013-08-22T15:45:40Z",
    "updatedAt": "2013-08-22T21:40:56Z",
    "lastPublishedAt": "2013-08-22T21:40:56Z"
}

List Articles

{
    "articles": {
        "page": 1,
        "pages": 1,
        "count": 4,
        "items": [
            {
                "id": "5215163545667acd25394b5c",
                "number": 121,
                "collectionId": "5214c77c45667acd25394b51",
                "status": "published",
                "hasDraft": false,
                "name": "My Article",
                "publicUrl": "https://docs.helpscout.net/article/100-my-article",
                "popularity": 4.3,
                "viewCount": 237,
                "createdBy": 73423,
                "updatedBy": null,
                "createdAt": "2013-08-21T19:34:13Z",
                "updatedAt": null,
                "lastPublishedAt": "2013-08-21T19:34:13Z"
            },
            {... article ref object ...},
            {... article ref object ...},
            {... article ref object ...}
        ]
    }
}



List Collection

{
    "collections": {
        "page": 1,
        "pages": 1,
        "count": 4,
        "items": [{
                "id": "5214c83d45667acd25394b53",
                "siteId": "52404efc4566740003092640",
                "number": 33,
                "slug": "my-collection",
                "visibility": "public",
                "order": 1,
                "name": "My Collection",
                "description": "Description of my collection",
                "publicUrl": "https://my-docs.helpscoutdocs.com/collection/1-test",
                "articleCount": 3,
                "publishedArticleCount": 1,
                "createdBy": 73423,
                "updatedBy": 73423,
                "createdAt": "2013-08-21T14:01:33Z",
                "updatedAt": "2013-08-21T14:01:33Z"
            },
            { ...collection object...},
            { ...collection object...},
            { ...collection object...}
        ]
    }
}



Let's do this all with a rust backend. 



Here are the URLs I'll need to hit:

List Collections
REST Method: GET
URL: https://docsapi.helpscout.net/v1/collections

Get Collection
REST Method: GET
URL: https://docsapi.helpscout.net/v1/collections/{id}

List Articles
REST Method: GET
URL: https://docsapi.helpscout.net/v1/collections/{id}/articles

Get Article
REST Method: GET
URL: https://docsapi.helpscout.net/v1/articles/{id}


We're gonna want to store each of them in the database along the way, 
so we'll need to establish the database and set that up first. 
And we'll need a script to Convert all help docs into embeddings 
using a transformer model (like BERT or a domain-specific model) 
and store these embeddings in a vector database.


Please explain to me what you think. No need to write any code yet,
just higher level ideas for now. Be prepared to explain further in
anything you write.
